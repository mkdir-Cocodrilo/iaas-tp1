name: Build and Deploy to Cloud Run
on:
  push:
    branches:
      - main

env:
  PROJECT_ID: iaas-tp1-421811
  GAR_LOCATION: europe-west9
  REPOSITORY: iaas-tp1-register
  SERVICE: youtube-api-job-service
  REGION: europe-west9  

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' 
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          echo "Building Docker image..."
          docker-compose -f docker-compose.prod.yml build app
          BUILD_EXIT_CODE=$?
          if [ $BUILD_EXIT_CODE -ne 0 ]; then
            echo "Docker build failed. Exiting."
            exit $BUILD_EXIT_CODE
          fi
          echo "Docker build succeeded."

          echo "Retrieving image ID..."
          IMAGE_ID=$(docker images --format '{{.ID}}' --filter "reference=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/app:${{ github.sha }}")
          echo "FastAPI Service Image ID: $IMAGE_ID"
          if [ -z "$IMAGE_ID" ]; then
            echo "Error: IMAGE_ID is empty. Exiting."
            exit 1
          fi

          echo "Tagging Docker image..."
          docker tag $IMAGE_ID "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
